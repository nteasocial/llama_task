version: "3.8"
services:
  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    environment:
      - ENV=docker
    env_file:
      - .env

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_GRAPHQL_URL=http://localhost:8000/graphql/
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6389:6379"

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  celery-worker:
    build: ./backend
    command: celery -A app worker -l INFO
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    environment:
      - ENV=docker
    env_file:
      - .env

  celery-beat:
    build: ./backend
    command: celery -A app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    environment:
      - ENV=docker
    env_file:
      - .env

volumes:
  postgres_data:
